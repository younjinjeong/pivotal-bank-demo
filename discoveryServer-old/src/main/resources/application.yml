spring:
  application:
    name: eureka-server
  profiles.active: local
eureka:
  instance:
    hostname: ${vcap.application.uris[0]:localhost}
    metadataMap:
      instanceId: ${spring.application.name}:${vcap.application.instance_index:${server.port}}
  enableSelfPreservation: false
#  client:
#    registerWithEureka: false
#    fetchRegistry: false
  server:
    waitTimeInMsWhenSyncEmpty: 0
logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([trace=%X{X-Trace-Id:-},span=%X{X-Span-Id:-}]){yellow} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%replace(%xException){'\n','\u2028'}%nopex%n"
  level:
    com.netflix: FATAL
    org.springframework.cloud: WARN
---
spring:
  profiles: local
eureka:
  client:
     serviceUrl:
       defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
server:
  port: ${PORT:8761}   
---
spring:
  profiles: cloud
eureka:
  instance:
    nonSecurePort: 80  
#server:
#  port: ${vcap.application.port:80}
--- 
