# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    parallelism: 4
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
    - run:
        name: quotes-service build
        command: |
          cd quotes-service
          ./gradlew build
          cd ..
    - run:
        name: accounts-service build
        command: |
          cd accounts-service
          ./gradlew build
          cd ..
    - run:
        name: portfolio-service build
        command: |
          cd portfolio-service
          ./gradlew build
          cd ..
    - run:
        name: webui-service build
        command: |
          cd web-ui
          ./gradlew build
          cd ..
    - run:
        name: user-service build
        command: |
          cd user-service
          ./gradlew build
          cd ..

      - persist_to_workspace:
          root: ~/
          paths:
            - .


  unit_test:
    docker:
      - image: circleci/openjdk:11-jdk
    parallelism: 4
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - run:
            name: quotes-service test
            command: |
              cd quotes-service
              ./gradlew test --tests '**'
              cd ..
      - run:
          name: accounts-service test
          command: |
            cd accounts-service
            ./gradlew test --tests '**'
            cd ..
      - run:
          name: portfolio-service test
          command: |
            cd portfolio-service
            ./gradlew test --tests '**'
            cd ..
      - run:
          name: webui-service test
          command: |
            cd web-ui
            ./gradlew test --tests '**'
            cd ..
      - run:
          name: user-service test
          command: |
            cd user-service
            ./gradlew test --tests '**'
            cd ..

      # run tests!
      # - run: ./gradlew test

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - unit_test:
          requires:
            - build