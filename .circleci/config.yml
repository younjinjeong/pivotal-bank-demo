# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  code_checkout:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      # parallelism: 4
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - restore_cache:
          keys:
            - pivotal-bank-source-{{ .Branch }}-{{ .Revision }}
            - pivotal-bank-source-{{ .Branch }}-
            - pivotal-bank-source-

      - checkout

      - save_cache:
          key: pivotal-bank-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      - persist_to_workspace:
          root: ~/
          paths:
            - .

  build_quotes_service:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    # parallelism: 4
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:

      - attach_workspace:
          at: ~/

      - restore_cache:
          keys:
            - quotes-service-{{ checksum "quotes-service/.gradle" }}
            - quotes-service-

      - run:
          name: quotes-service build
          command: |
            cd quotes-service
            ./gradlew build
            cd ..

      - save_cache:
          name: Save cache for quotes-service
          paths:
            - "~/repo/quotes-service/"
          key: quotes-service-{{ checksum "quotes-service/.gradle" }}

      - persist_to_workspace:
          root: ~/
          paths:
            - .



  build_accounts_service:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    # parallelism: 4
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - restore_cache:
          keys:
            - accounts-service-{{ checksum "accounts-service/.gradle" }}
            - accounts-service-

      - attach_workspace:
          at: ~/

      - run:
          name: accounts-service build
          command: |
            cd accounts-service
            ./gradlew build
            cd ..

      - save_cache:
          name: Save cache for accounts-service
          key: accounts-service-{{ checksum "accounts-service/.gradle" }}

      - persist_to_workspace:
          root: ~/
          paths:
            - .



  build_portfolio_service:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    # parallelism: 4
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - restore_cache:
          keys:
            - portfolio-service-{{ checksum "portfolio-service/.gradle" }}
            - portfolio-service-

      - attach_workspace:
          at: ~/

      - run:
          name: portfolio-service build
          command: |
            cd portfolio-service
            ./gradlew build
            cd ..

      - save_cache:
          name: Save cache for portfolio-service
          # paths:
          #   - "~/repo/portfolio-service/"
          key: portfolio-service-{{ checksum "portfolio-service/.gradle" }}

      - persist_to_workspace:
          root: ~/
          paths:
            - .

  build_web_ui:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    # parallelism: 4
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - restore_cache:
          keys:
            - web-ui-{{ checksum "web-ui/.gradle" }}
            - web-ui-

      - attach_workspace:
          at: ~/

      - run:
          name: web-ui build
          command: |
            cd web-ui
            ./gradlew build
            cd ..

      - save_cache:
          name: Save cache for web-ui
          key: web-ui-{{ checksum "web-ui/.gradle" }}

      - persist_to_workspace:
          root: ~/
          paths:
            - .



  build_user_service:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    # parallelism: 4
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - restore_cache:
          keys:
            - user-service-{{ checksum ".gradle" }}
            - user-service-

      - attach_workspace:
          at: ~/

      - run:
          name: user-service build
          command: |
            cd user-service
            ./gradlew build
            cd ..

      - save_cache:
          name: Save cache for user-service
          key: user-service-{{ checksum "user-service/.gradle" }}

      - persist_to_workspace:
          root: ~/
          paths:
            - .


  test_quotes_service:

    docker:
      - image: circleci/openjdk:11-jdk
    # parallelism: 4
    working_directory: ~/repo

    steps:
      - restore_cache:
        keys:
          - quotes-service-{{ checksum "quotes-service/.gradle" }}
          - quotes-service-

      - attach_workspace:
          at: ~/

      - run:
            name: quotes-service test
            command: |
              cd quotes-service
              ./gradlew test --tests '**'
              cd ..

      - save_cache:
          name: Save cache for quotes-service
          key: quotes-service-{{ checksum "quotes-service/.gradle" }}


  test_accounts_service:

    docker:
      - image: circleci/openjdk:11-jdk
      # parallelism: 4

    working_directory: ~/repo

    steps:
      - restore_cache:
          keys:
            - accounts-service-{{ checksum "accounts-service/.gradle" }}
            - accounts-service-


      - attach_workspace:
          at: ~/

      - run:
          name: accounts-service test
          command: |
            cd accounts-service
            ./gradlew test --tests '**'
            cd ..

      - save_cache:
          name: Save cache for accounts service
          key: accounts-service-{{ checksum "accounts-service/.gradle" }}


  test_portfolio_service:

    docker:
      - image: circleci/openjdk:11-jdk
      # parallelism: 4
    working_directory: ~/repo

    steps:
      - restore_cache:
          keys:
            - portfolio-service-{{ checksum "portfolio-service/.gradle" }}
            - portfolio-service-

      - attach_workspace:
          at: ~/

      - run:
          name: portfolio-service test
          command: |
            cd portfolio-service
            ./gradlew test --tests '**'
            cd ..

      - save_cache:
          name: Save cache for portfolio service
          key: v1-dependencies-portfolio-service-{{ checksum "portfolio-service/.gradle" }}


  test_web_ui:

    docker:
      - image: circleci/openjdk:11-jdk
      # parallelism: 4
    working_directory: ~/repo

    steps:
      - restore_cache:
        keys:
          - web-ui-{{ checksum "web-ui/.gradle" }}
          - web-ui-

      - attach_workspace:
          at: ~/

      - run:
          name: webui-service test
          command: |
            cd web-ui
            ./gradlew test --tests '**'
            cd ..
      - save_cache:
          name: Save cache for web-ui
          key: web-ui-{{ checksum "web-ui/.gradle" }}


  test_user_service:

    docker:
      - image: circleci/openjdk:11-jdk
      # parallelism: 4
    working_directory: ~/repo

    steps:
      - restore_cache:
        keys:
          - user-service-{{ checksum "user-service/.gradle" }}
          - user-service-

      - attach_workspace:
          at: ~/

      - run:
          name: user-service test
          command: |
            cd user-service
            ./gradlew test --tests '**'
            cd ..
      - save_cache:
          name: Save cache for user-service
          key: user-service-{{ checksum "user-service/.gradle" }}


workflows:
  version: 2
  build_and_test:
    jobs:
      - code_checkout

      - build_quotes_service:
          requires:
            - code_checkout

      - build_accounts_service:
          requires:
            - code_checkout

      - build_portfolio_service:
          requires:
            - code_checkout

      - build_user_service:
          requires:
            - code_checkout

      - build_web_ui:
          requires:
            - code_checkout


      - test_quotes_service:
          requires:
            - build_quotes_service

      - test_accounts_service:
          requires:
            - build_accounts_service

      - test_portfolio_service:
          requires:
            - build_portfolio_service

      - test_web_ui:
          requires:
            - build_web_ui

      - test_user_service:
          requires:
            - build_user_service
